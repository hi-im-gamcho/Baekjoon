# 최대공약수(gcd = greatest common divisor), 최소공배수(lcm = lowest common multiple) 구하기.

# 호제법 : 두 수가 서로(互) 상대방 수를 나누어(除)서 결국 원하는 수를 얻는 알고리즘을 나타낸다.




# 최대공약수 : 2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a>b), 
# a와 b의 최대공약수는 b와 r(= a%b)의 최대공약수와 같다. 
def gcd(x,y):
    while y != 0:
        x,y = y, x%y
    return x

# -ex1) 78696, 19332의 최대공약수 구하기
# 78696 ＝ 19332×4 ＋ 1368
# 19332 ＝ 1368×14 ＋ 180
#  1368 ＝ 180×7 ＋ 108
#   180 ＝ 108×1 ＋ 72
#   108 ＝ 72×1 ＋ 36
#    72 ＝ 36×2 ＋ 0

# 최소공배수 : a, b 의 곱을 최대공약수(gcd)로 나눠준 값이다.
def lcm(a,b):
    mul = a * b
    while b > 0:
        a,b = b, a%b
    return mul // a

