# 함수를 사용한다 = 함수를 호출한다
# 함수를 호출할 때는 괄호 내부에 여러가지 자료를 넣게 됨.
# 이러한 자료를 '매개변수'라고 부름.
# 함수를 호출해서 최종적으로 나오는 결과를 '리턴값'이라고 부름.
def 함수(매개변수):
   변수 = 초깃값
   여러가지 처리들
   return 변수



# 1. 리턴(return) : 함수를 실행했던 위치로 돌아가라는 뜻으로, 함수가 끝나는 위치를 의미.
# 따라서 return 키워드를 만나는 순간 함수가 종료됨
# 자료 없이 리턴하기
def return_test():
    print("위치 a")
    return 
    print("위치 b")

print(return_test)
# >>> 위치 a

# 자료와 함께 리턴하기
def return_test2():
    return 100

value = return_test2()
print(value)
# >>> 100



# 2. 매개변수
#
# - 가변 매개변수 - 
#   1. print() 함수와 같이 매개변수를 원하는 만큼 받을 수 있는 함수.
#   2. 가변 매개변수 함수당 하나만 사용할 수 있다.
#   3. 가변 매개변수 뒤에는 일반 매개변수가 올 수 없다.
#   4. 함수(일반 매개변수1, 일반 매개변수 2, ..., *가변 매개변수) 
#   5. 가변 매개변수는 리스트처럼 사용하면 된다.
#   -ex)
#   def print_n_times(n, *values):
#       for i in range(n):
#           for value in values:
#               print(value)
#           print()
#   print_n_times(3, "안녕하세요", "즐거운", "파이썬 프로그래밍")

# - 기본 매개변수 -
#   1. 매개변수를 입력하지 않을 경우 매개변수에 들어가는 기본값.
#   2. 매개변수=값 형태로 되어있다. 
#   3. 기본 매개변수 뒤에는 일반 매개변수가 올 수 없다.
#   -ex)
#   def print_n_times(value, n=2):
#       for i in range(n):
#           print(value)
#   print_n_times("안녕하세요")



# 가변, 기본 매개변수를 함께 사용할 수 없을까?
# -> 키워드 매개변수 
#   1. 매개변수 이름을 직접적으로 지정해서 값을 입력 
#   2. -ex) end=" "
#   3. 키워드 매개변수를 사용하면 매개변수의 순서에 구애받지 않는다는 장점이 있다.


# - !!!Remember!!! -
# (앞)    일반 > 가변     (뒤) 
# (앞)    일반 > 기본     (뒤) 

# 일반적으로 '일반 매개변수는' 필수로 입력한다.
# '기본 매개변수'는 필요한 것만 키워드를 지정해서 입력한다.