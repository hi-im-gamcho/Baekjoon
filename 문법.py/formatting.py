# 1. 서식 지정자 formatting

# %d는 정수로, %f는 실수로, %s는 문자열을 포맷팅할 때 사용
# 문자열이 끝나는 부분에 %로 어떤 변수에 저장된 값을 가져올지 지정해주면 됨.
num_1 = 15
num_2 = 3.0
str_1 = 'abc'
                                # 결과
print('숫자 1 : %d' %num_1)     # 숫자 1 : 15
print('숫자 2 : %f' %num_2)     # 숫자 2 : 3.000000
print('문자열 : %s' %str_1)     # 문자열 : abc
print('%.2f' %num_2)            # 3.00

# %o로 8진수 포맷팅이나, %x로 16진수 포맷팅을 하는 것도 가능. 
# 단, 이 때 변수에 담긴 값은 정수이어야 함.
num = 27
                            # 결과
print('8진수 : %o' %num)     # 8진수 : 33
print('16진수 : %x' %num)    # 16진수 : 1b



# 2. f-string formatting

## 1. string이 시작되는 "" 쌍따음표 앞에 f자를 붙이고, {}안에 변수를 넣어 사용
# 장점 : 
year = 2011
month = 11
date = 18

print(f"올해 수능은 {year}년 {month}월 {date}일에 시행됩니다.")

## 2. 변수 간 연산 결과도 f-string을 이용해서 자동 출력 가능
x = 3
y = 4

b = f'{x}의 {y}제곱은 {x ** y}입니다.'
print(b) # 3의 4제곱은 81입니다.

## 3. 소수점 포맷팅을 원하는 경우, 변수 뒤에 :.2f 처럼 포맷팅 형태를 지정할 수 있음
## 4. 정수형 포맷팅을 원하는 경우, 변수 뒤에 :03d 처럼 포맷팅 형태를 지정할 수 있음

x = 3.14
y = 4

b = f'{x:.2f}의 {y:03d}제곱은 {x ** y:.3f}입니다.'
     # 3.14의    004제곱은     97.212입니다.
print(b)

